{
  "create_blocks": "create table blocks (block_hash text primary key unique not null,block_signature text not null,block_randaosig text not null,height integer unique);",
  "insert_blocks": "insert into blocks(block_hash, block_signature, block_randaosig, height) values(?, ?, ?, ?);",
  "create_block_headers": "create table block_headers (id integer primary key,block_hash text unique not null,version integer not null,nonce integer not null,tx_merkle_root text not null,tx_multimerkle_root text not null,vote_merkle_root text not null,deposit_merkle_root text not null,exit_merkle_root text not null,voteslashing_merkle_root text not null,RANDAOslashing_merkle_root text not null,proposerslashing_merkle_root text not null,governancevote_merkle_root text not null,prev_block_hash text not null,timestamp integer not null,slot integer not null,state_root text not null,fee_addr text not null,header_hash text not null,foreign key (block_hash) references blocks (block_hash)); ",
  "insert_block_headers": "insert into block_headers(block_hash, version, nonce, tx_merkle_root, tx_multimerkle_root, vote_merkle_root, deposit_merkle_root, exit_merkle_root, voteslashing_merkle_root,RANDAOslashing_merkle_root,proposerslashing_merkle_root,governancevote_merkle_root,prev_block_hash,timestamp,slot,state_root,fee_addr,header_hash  ) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);",
  "create_multi_votes": "create table multi_votes (id integer primary key,block_hash text not null,signature text not null,participation_bitfield text not null,data_slot integer not null, data_from_epoch integer not null,data_from_hash text not null,data_to_epoch integer not null,data_to_hash text not null,data_beacon_block_hash text not null,data_nonce integer not null,vote_hash text not null,foreign key (block_hash) references blocks (block_hash));",
  "insert_multi_votes": "insert into multi_votes(block_hash,signature,participation_bitfield,data_slot,data_from_epoch,data_from_hash,data_to_epoch,data_to_hash,data_beacon_block_hash,data_nonce,vote_hash) values(?,?,?,?,?,?,?,?,?,?,?);",
  "create_transactions": "create table transactions (  block_hash text not null,  tx_type integer not null,  to_addr text not null,  from_pub_key text,  amount integer not null,  nonce integer not null, fee integer not null,sig_type integer not null,  signature text not null,foreign key (block_hash) references blocks (block_hash));",
  "insert_transactions_0": "insert into transactions(block_hash, tx_type, to_addr,from_pub_key,amount,nonce,fee,sig_type,signature) values(?,?,?,?,?,?,?,?,?);",
  "insert_transactions_1": "insert into transactions(block_hash, tx_type, to_addr,amount,nonce,fee,sig_type,signature) values(?,?,?,?,?,?,?,?);",
  "create_validators": "create table validators ( id integer primary key, pub_key text unique not null);",
  "insert_validators": "insert into validators(pub_key) values(?);",
  "create_deposits": "create table deposits ( block_hash text not null,pub_key text not null, signature text not null,data_pub_key text not null, data_proof_poss text not null, data_withdrawal_addr text not null,foreign key (block_hash) references blocks (block_hash));",
  "insert_deposits": "insert into deposits(block_hash,pub_key,signature,data_pub_key,data_proof_poss,data_withdrawal_addr) values(?,?,?,?,?,?);",
  "create_exits": "create table exits ( block_hash text not null,  validator_pub_key text not null,  withdrawal_pub_key text not null, signature text not null,foreign key (block_hash) references blocks (block_hash));",
  "insert_exits": "insert into exits(block_hash,validator_pub_key,withdrawal_pub_key,signature) values(?,?,?,?);",
  "create_vote_slashings" : "create table vote_slashings ( block_hash text not null, vote_1_id integer not null,vote_2_id integer not null,foreign key (block_hash) references blocks (block_hash),foreign key (vote_1_id) references multi_votes (id), foreign key (vote_2_id) references multi_votes (id));",
  "insert_vote_slashings": "insert into vote_slashings(block_hash,vote_1_id,vote_2_id) values(?,?,?);",
  "create_RANDAO_slashings": "create table RANDAO_slashings ( block_hash text not null, randao_reveal text not null, slot integer not null, validator_pub_key text not null,foreign key (block_hash) references blocks (block_hash));",
  "insert_RANDAO_slashings": "insert into RANDAO_slashings(block_hash,randao_reveal,slot,validator_pub_key) values(?,?,?,?);",
  "create_proposer_slashings": "create table proposer_slashings( block_hash text not null,  blockheader_id_1 integer not null, blockheader_id_2 integer not null, signature_1 text not null,signature_2 text not null, validator_pub_key text not null,foreign key (block_hash) references blocks (block_hash),foreign key (blockheader_id_1) references block_headers (id),foreign key (blockheader_id_2) references block_headers (id));",
  "insert_proposer_slashings": "insert into proposer_slashings(block_hash,blockheader_id_1,blockheader_id_2,signature_1,signature_2,validator_pub_key) values(?,?,?,?,?,?);",
  "create_accounts": "create table accounts(addr text primary key unique not null, balance integer default 0, total_sent integer default 0, total_received integer default 0);",
  "insert_accounts": "insert into accounts(addr, balance, total_sent, total_received) values(?,?,?,?) on conflict(addr) do update set balance=balance+?, total_sent=total_sent+?,total_received=total_received+?;"
}
// Code generated by fastssz. DO NOT EDIT.
// Hash: 4d779758de79d566b2f9c09c1fc0f1ea9cb51726f00db054cc11d51543e97abd
package primitives

import (
	ssz "github.com/ferranbt/fastssz"
)

// MarshalSSZ ssz marshals the Validator object
func (v *Validator) MarshalSSZ() ([]byte, error) {
	return ssz.MarshalSSZ(v)
}

// MarshalSSZTo ssz marshals the Validator object to a target array
func (v *Validator) MarshalSSZTo(buf []byte) (dst []byte, err error) {
	dst = buf

	// Field (0) 'Balance'
	dst = ssz.MarshalUint64(dst, v.Balance)

	// Field (1) 'PubKey'
	dst = append(dst, v.PubKey[:]...)

	// Field (2) 'PayeeAddress'
	dst = append(dst, v.PayeeAddress[:]...)

	// Field (3) 'Status'
	dst = ssz.MarshalUint64(dst, v.Status)

	// Field (4) 'FirstActiveEpoch'
	dst = ssz.MarshalUint64(dst, v.FirstActiveEpoch)

	// Field (5) 'LastActiveEpoch'
	dst = ssz.MarshalUint64(dst, v.LastActiveEpoch)

	return
}

// UnmarshalSSZ ssz unmarshals the Validator object
func (v *Validator) UnmarshalSSZ(buf []byte) error {
	var err error
	size := uint64(len(buf))
	if size != 100 {
		return ssz.ErrSize
	}

	// Field (0) 'Balance'
	v.Balance = ssz.UnmarshallUint64(buf[0:8])

	// Field (1) 'PubKey'
	copy(v.PubKey[:], buf[8:56])

	// Field (2) 'PayeeAddress'
	copy(v.PayeeAddress[:], buf[56:76])

	// Field (3) 'Status'
	v.Status = ssz.UnmarshallUint64(buf[76:84])

	// Field (4) 'FirstActiveEpoch'
	v.FirstActiveEpoch = ssz.UnmarshallUint64(buf[84:92])

	// Field (5) 'LastActiveEpoch'
	v.LastActiveEpoch = ssz.UnmarshallUint64(buf[92:100])

	return err
}

// SizeSSZ returns the ssz encoded size in bytes for the Validator object
func (v *Validator) SizeSSZ() (size int) {
	size = 100
	return
}

// HashTreeRoot ssz hashes the Validator object
func (v *Validator) HashTreeRoot() ([32]byte, error) {
	return ssz.HashWithDefaultHasher(v)
}

// HashTreeRootWith ssz hashes the Validator object with a hasher
func (v *Validator) HashTreeRootWith(hh *ssz.Hasher) (err error) {
	indx := hh.Index()

	// Field (0) 'Balance'
	hh.PutUint64(v.Balance)

	// Field (1) 'PubKey'
	hh.PutBytes(v.PubKey[:])

	// Field (2) 'PayeeAddress'
	hh.PutBytes(v.PayeeAddress[:])

	// Field (3) 'Status'
	hh.PutUint64(v.Status)

	// Field (4) 'FirstActiveEpoch'
	hh.PutUint64(v.FirstActiveEpoch)

	// Field (5) 'LastActiveEpoch'
	hh.PutUint64(v.LastActiveEpoch)

	hh.Merkleize(indx)
	return
}

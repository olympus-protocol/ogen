package burnproof_test

import (
	"bytes"
	"encoding/hex"
	"github.com/olympus-protocol/ogen/pkg/burnproof"
	"github.com/stretchr/testify/assert"
	"testing"
)

var burnProof = "21571e00170bbfe2b4da66efb010b75b18a3986214b3943edfb571f78bd3c76e25a2fa230a4a107be9f1be4fd6006d4f58709f09b2991eea075f735f1c4d5c61d5450124c2cb6840146cdb5fdc4075f2c7e363398a440566357e5057e9ad4875eb5602ce8aff3d47d632bf8b3017b0a41bea6c5e0193e5c29ac069c917a4c5ca96f69b81cdb55efb0c269ca9797c66ffec334589ff0fe6ac2482cd559d59d79abe67f4c7a3bd431c1b7c87b10011dc69772f04a6c4c0cc3b3d8c6907497914fc034afc84d1c506d9c0913b761df75b17a6895fdce9102542a91a38213b5af50444185487e00b9f5151f86d87f38500048034a52fd627b7d3184eb09387b4564a3c24e6793f21669dc0fcaca58595e2c1d3f424f7a3d98c430fc309fe1ce37551e9607c41283a32ae3de5eae14d3af25074b0fe58fb2faa67dc39520341e1d0bd04188fa818792c616896cf9e9452cee9c91db7cfd23d814c32fa955e6e0371915d758b7d968b644ebf032a2b91b5a6645e8c2618df515ace10fe8172e5466e0d2ef218e2efea665fd276bd5885a1ff822118cce37df4706b4f7e1f696163ede2f7157c3ac7d74c7b6f5f2ce107f625a04c34244c0b5df6eeedf5f2e7b1c5f9b444c92292d224ef3045693d9067538a5ef34bd881e80a45dd3d946e6e56112fecfd9989e4ddda36e5325c4d37e5c2ca0a69856bc67d37edafc3d8f903e3811492640029fedc9089fd077b370d269a8ac1caed9dcde93756924199ca77ab7a126261ce86129a83c53dc5e153c0ae896c9aa825d666ea914dfb61fb9f5e29a5251dcd3d98711cdea068c2ceb92fb65e629e74698c0bd2a12ba92faf18ea3723f18863d741f73f74eafa6351106fb546c082b711a5ae1679e38b3728253aa07e27f32b5f001282062008bbe83bd59cd354f4391ee8f092424274d997057cd531b93bbac565db15067d7a0ace18f8540f0b5e81521b45064507a32630c262e63d0a9681d5fec95dc9639244142e3d3b37b4e4a8e865de23b5866b6220ee9ad707b8d8c2286e504e02000000014e440a7c63e29f91f567c3f921d3b0d4b96b6f5f4842380ba423f4950394901f000000006b483045022100f2cf5be3f051c35b4bca7029cdacf39f6fd7226996b1d47c09fd16b0f911821302201d76cbec302e5077a8b4e2cfe3e7b28296fe04de5ce3f33ae9624ae02b5426f501210320d40a383de4c6dffe35cbb912c6a117ce0e5ef54530d499150a9b5be656dc34ffffffff0100e1f505000000001976a914a0efa49b23dad0da1b1539a71c5813fac044fde388acf35b0a001976a91480af701fba69d380606ec0f17fdaa30b7b473c0a88ac16e7270017de334368d1bcbb1a1e800eb6efa3002a534e1419822a97186e02e946ebcc723321f2d2e28407cdbb2fb73e923327f22aff76ccfd772812f3ded4eebc6a2363cc5192a876f3e6b9e51f29b43f99d30a1d101f4c4ff66d1ccbee1d279c78eb29f1015c5cf0f9540585790805bcf86dc583192910ea6f9b187be475598825ec619549272fdfdb92dab2af629d1381ac0ac5e9490edbb7930648b1ab6a03e5de6c7ec32e769ccc441426ad94d66cae3fe892076028b14aa507b96241ff0e66172d9322429f3bbcd261f1f4fd8449f45451b4cb7542950fb94f1cc190a72c55ecd3d97f8867b455bc1b98b551dad3f980ecf2cd698006444a7f4a3fbd6112d3c578cac68a53c58e344b3ae5ae1b6b95cbb2db227bde9adc7b6e94fea51bf0ffde683bfc30bf73192dc85ec2d17a9c920772fbfee28f8105d5b1a19ba50ea5da98a330b099ec539735a9e7e16ddc5cbbf6870e0c8735b83c314586a53a9e457643a1c3f506e2fcddbde515efecc4bb1897a9a7670e16df25e9aadecf65399a95f3c9d8c47516a65b512f21cf0ebe8f40835785b8b79adc05393de2767202772d5568ca81ff631868992b630f458fa167be41472f1bb711739928659c330964df16f2449a46eabb66fb68e34110547d66058fe271f99a1a2417c41a3f790024794715d47b60654595bbdd83c911d53dde8a98294134d40b1f214f8b0828700b8cd9dec9d18fd6f248649e9957193b024cb667219a7bd62c35eb123cfa6c8ff7a3191d3dd8c21da2ae4ab147e8cb52d3f6d40d71f8204af019e74a9fad090cdf222ace03f8bd4add4479b9cd2a3889acbcf025391db72adb3aca9856632cf9e67d121de875181d6072bbfbfd97f4e3ec9edcc9cbe7de9abe191718a22e774ee7f3cbb2da76b60fc7a45a3199216c3f659c2493a6b44f2972886261575dfd0d694ce5240db0e2b33a694293961738ca69bd8d1979481bd45c0f3f422be86047520e7217bec9639244142e3d3b37b4e4a8e865de23b5866b6220ee9ad707b8d8c2286e504e020000000167e49024415f20f2e683da8fb07e0dfdbd531087e7692fa7cb50650d02ed269b000000006b483045022100d3abd9c5a5ce3d47a1eb9b443e94d4fa606a67b34597d3de68ce8895a03bb81002202f7d6d1af7e3143949cd304e7bfa4420c67b4943527153d56d9ea56046f95ef7012102654e5cf3f56101d2da6497db0d8f20df044cc8c5fa58c74f3ad0b5a7a0fc1328ffffffff0100e1f505000000001976a914a0efa49b23dad0da1b1539a71c5813fac044fde388acf35b0a001976a9145bda310f4bb7e2bae6e3b1c46bde4bb55e95bef888ac17e72700173cc1bc224c3b8a6ed76185b6f66db98510e740d7e83740ef705f50d2748a1c9421f2d2e28407cdbb2fb73e923327f22aff76ccfd772812f3ded4eebc6a2363cc5192a876f3e6b9e51f29b43f99d30a1d101f4c4ff66d1ccbee1d279c78eb29f1015c5cf0f9540585790805bcf86dc583192910ea6f9b187be475598825ec619549272fdfdb92dab2af629d1381ac0ac5e9490edbb7930648b1ab6a03e5de6c7ec32e769ccc441426ad94d66cae3fe892076028b14aa507b96241ff0e66172d9322429f3bbcd261f1f4fd8449f45451b4cb7542950fb94f1cc190a72c55ecd3d97f8867b455bc1b98b551dad3f980ecf2cd698006444a7f4a3fbd6112d3c578cac68a53c58e344b3ae5ae1b6b95cbb2db227bde9adc7b6e94fea51bf0ffde683bfc30bf73192dc85ec2d17a9c920772fbfee28f8105d5b1a19ba50ea5da98a330b099ec539735a9e7e16ddc5cbbf6870e0c8735b83c314586a53a9e457643a1c3f506e2fcddbde515efecc4bb1897a9a7670e16df25e9aadecf65399a95f3c9d8c47516a65b512f21cf0ebe8f40835785b8b79adc05393de2767202772d5568ca81ff631868992b630f458fa167be41472f1bb711739928659c330964df16f2449a46eabb66fb68e34110547d66058fe271f99a1a2417c41a3f790024794715d47b60654595bbdd83c911d53dde8a98294134d40b1f214f8b0828700b8cd9dec9d18fd6f248649e9957193b024cb667219a7bd62c35eb123cfa6c8ff7a3191d3dd8c21da2ae4ab147e8cb52d3f6d40d71f8204af019e74a9fad090cdf222ace03f8bd4add4479b9cd2a3889acbcf025391db72adb3aca9856632cf9e67d121de875181d6072bbfbfd97f4e3ec9edcc9cbe7de9abe191718a22e774ee7f3cbb2da76b60fc7a45a3199216c3f659c2493a6b44f2972886261575dfd0d694ce5240db0e2b33a694293961738ca69bd8d1979481bd45c0f3f422be86047520e7217bec9639244142e3d3b37b4e4a8e865de23b5866b6220ee9ad707b8d8c2286e504e020000000167e49024415f20f2e683da8fb07e0dfdbd531087e7692fa7cb50650d02ed269b010000006b483045022100f93f6edfdee3dc57e4011b3a7d1b6774754c521e15128252c88e7e61488cd0b7022003bc7aff2a69d44495d6f1fe141b067c5a14f5025933e457fd3f17277de00e5f0121021d2f7ecb40a222543cb9811e2f603c38a80c8f6bbad382382479918f681868a4ffffffff0168965e7e040000001976a914a0efa49b23dad0da1b1539a71c5813fac044fde388acf35b0a001976a914c932357703e02dc7ae1eca50b91e2ecbe6d8b18988ac13d52e0017ae055888cf8fa87ad02de1e9cbb517877fc87c44e9cedd008688ac8e8aec6a402252b8d2be7e3ceb7ce4b6553c86d35ddf9325d36e5064769868d4d0fe8860b0a4d219e1d1c11d2a30f5b438fe99b56cf7a3d654a8b305afb5feea971222c42395e8ff95dc3420c3f4e664927b451cd9e9037fdd2fb9f7b7285caaa3d42404ba1d564dc6f9d93c5188484fd6999c8883061ad32990ed669ea9cd0db71f2fba966827594ae9b61e4e3bcc0e67d8e64a60516603008a9f24a15e2de81004f3db50974dd34e4f92e0d7494f107a7e72407ebe68c7d5d0b7575dfaab911e7bc89e5c0f5e739628e0363fa907010b425eacbf6a566a65a3e9272024a3c868702957be89c4304cea5dfd070d346fba87be0a1b9c36842c6b56366d42c4a6d154e45073eb29832d4727c2c1d853456534c4ba827d16f901b125160cf3679ed932732283fc6932ca5ab93f0fadf1979edce2e06c13ce5fd311eb3e27bc91e8a95b5437bd63556eec2333501d6f7e5861f4d57f3977221b262598afebe2f36831f97c12913230f1c08fc7d25bc52ea192050009fcd45b169645070d25ba2f481c10daea1e4b46739231519f9474fd747ba6d2a8485e891dfff452bfc53fc9a48092e1a47161273f274e74783df0bcd7e6346362759455de5ea37bfeebd57d3ae0d46dedf842737d86ef29a6580db22b9c1b5c0dafda1d1868c25415cbbc10cd39c89a882559e06e74b2bf6a8e139a023d09399a448997194e27b7a3bba384f2dd024bdf425fd3d49ec05e4a0437f112d70ebb6553be395691b9a88912930f0746cc61366438b1a4e7ecf13f8254f01d21f7ce8173eefa7ea22f48a2b4d529ec0017421648e83f978199a0adb2bfeb2edc766f6240b40ccaecb905088a0550aac81cd9cc3b76b60fc7a45a3199216c3f659c2493a6b44f2972886261575dfd0d694ce5240db0e2b33a694293961738ca69bd8d1979481bd45c0f3f422be86047520e7217bec9639244142e3d3b37b4e4a8e865de23b5866b6220ee9ad707b8d8c2286e504e02000000017abcc373ba619bde6287c1012e206b40d8cf900ee0f3cf6a9ab21847de6766d0000000006a47304402200f9b90219a9e2b47cb0e918b31d2b7eb297d91e729bfea7b1c614f515ef52afb0220467a27739ff67019be5ba55990739234847654557466b4396e9a863216b58440012103f11ed3ed1ec664792733e4981a58d6f7550c290b712daf1903cfea4860d3072bffffffff01423d0f00000000001976a914a0efa49b23dad0da1b1539a71c5813fac044fde388acf35b0a001976a914c42ac312acdeaf8b5a275705bde45e2e0ebfd35588ac"

func TestCoinProofDecode(t *testing.T) {
	proofBytes, err := hex.DecodeString(burnProof)
	assert.NoError(t, err)

	buf := bytes.NewBuffer([]byte{})
	buf.Write(proofBytes)

	var proofs []*burnproof.CoinsProof
	for {
		coinProof := new(burnproof.CoinsProof)
		err = coinProof.Unmarshal(buf)
		assert.NoError(t, err)

		proofs = append(proofs, coinProof)
		if buf.Len() <= 0 {
			break
		}
	}
}

func TestBurnVerify(t *testing.T) {
	proofBytes, err := hex.DecodeString(burnProof)
	assert.NoError(t, err)

	assert.NoError(t, err)

	err = burnproof.VerifyBurn(proofBytes, "12345")
	assert.NoError(t, err)
}

// Code generated by fastssz. DO NOT EDIT.
package p2p

import ()

// MarshalSSZ ssz marshals the MsgGetAddr object
func (m *MsgGetAddr) MarshalSSZ() ([]byte, error) {
	buf := make([]byte, m.SizeSSZ())
	return m.MarshalSSZTo(buf[:0])
}

// MarshalSSZTo ssz marshals the MsgGetAddr object to a target array
func (m *MsgGetAddr) MarshalSSZTo(dst []byte) ([]byte, error) {
	var err error

	return dst, err
}

// UnmarshalSSZ ssz unmarshals the MsgGetAddr object
func (m *MsgGetAddr) UnmarshalSSZ(buf []byte) error {
	var err error
	size := uint64(len(buf))
	if size != 0 {
		return errSize
	}

	return err
}

// SizeSSZ returns the ssz encoded size in bytes for the MsgGetAddr object
func (m *MsgGetAddr) SizeSSZ() (size int) {
	size = 0
	return
}

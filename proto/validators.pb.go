// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: validators.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

var File_validators_proto protoreflect.FileDescriptor

var file_validators_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xb6,
	0x01, 0x0a, 0x0a, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x4a, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22,
	0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x12, 0x08, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x13, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x7b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x7d, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6c, 0x79, 0x6d, 0x70, 0x75, 0x73, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_validators_proto_goTypes = []interface{}{
	(*Empty)(nil),              // 0: Empty
	(*Account)(nil),            // 1: Account
	(*ValidatorsRegistry)(nil), // 2: ValidatorsRegistry
}
var file_validators_proto_depIdxs = []int32{
	0, // 0: Validators.GetValidatorsList:input_type -> Empty
	1, // 1: Validators.GetAccountValidators:input_type -> Account
	2, // 2: Validators.GetValidatorsList:output_type -> ValidatorsRegistry
	2, // 3: Validators.GetAccountValidators:output_type -> ValidatorsRegistry
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_validators_proto_init() }
func file_validators_proto_init() {
	if File_validators_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_validators_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_validators_proto_goTypes,
		DependencyIndexes: file_validators_proto_depIdxs,
	}.Build()
	File_validators_proto = out.File
	file_validators_proto_rawDesc = nil
	file_validators_proto_goTypes = nil
	file_validators_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ValidatorsClient is the client API for Validators service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ValidatorsClient interface {
	GetValidatorsList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ValidatorsRegistry, error)
	GetAccountValidators(ctx context.Context, in *Account, opts ...grpc.CallOption) (*ValidatorsRegistry, error)
}

type validatorsClient struct {
	cc grpc.ClientConnInterface
}

func NewValidatorsClient(cc grpc.ClientConnInterface) ValidatorsClient {
	return &validatorsClient{cc}
}

func (c *validatorsClient) GetValidatorsList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ValidatorsRegistry, error) {
	out := new(ValidatorsRegistry)
	err := c.cc.Invoke(ctx, "/Validators/GetValidatorsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorsClient) GetAccountValidators(ctx context.Context, in *Account, opts ...grpc.CallOption) (*ValidatorsRegistry, error) {
	out := new(ValidatorsRegistry)
	err := c.cc.Invoke(ctx, "/Validators/GetAccountValidators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ValidatorsServer is the server API for Validators service.
type ValidatorsServer interface {
	GetValidatorsList(context.Context, *Empty) (*ValidatorsRegistry, error)
	GetAccountValidators(context.Context, *Account) (*ValidatorsRegistry, error)
}

// UnimplementedValidatorsServer can be embedded to have forward compatible implementations.
type UnimplementedValidatorsServer struct {
}

func (*UnimplementedValidatorsServer) GetValidatorsList(context.Context, *Empty) (*ValidatorsRegistry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValidatorsList not implemented")
}
func (*UnimplementedValidatorsServer) GetAccountValidators(context.Context, *Account) (*ValidatorsRegistry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountValidators not implemented")
}

func RegisterValidatorsServer(s *grpc.Server, srv ValidatorsServer) {
	s.RegisterService(&_Validators_serviceDesc, srv)
}

func _Validators_GetValidatorsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorsServer).GetValidatorsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Validators/GetValidatorsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorsServer).GetValidatorsList(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Validators_GetAccountValidators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorsServer).GetAccountValidators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Validators/GetAccountValidators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorsServer).GetAccountValidators(ctx, req.(*Account))
	}
	return interceptor(ctx, in, info, handler)
}

var _Validators_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Validators",
	HandlerType: (*ValidatorsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetValidatorsList",
			Handler:    _Validators_GetValidatorsList_Handler,
		},
		{
			MethodName: "GetAccountValidators",
			Handler:    _Validators_GetAccountValidators_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "validators.proto",
}

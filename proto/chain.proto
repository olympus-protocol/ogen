
syntax = "proto3";
option go_package = "github.com/olympus-protocol/ogen/proto";

import "google/api/annotations.proto";
import "common.proto";

service Chain {

    /** 
        Method: GetChainInfo 
        Input: Empty
        Response: message ChainInfoResponse
        Description: Returns the current chain information.
    */

    rpc GetChainInfo(Empty) returns (ChainInfo) {
        option (google.api.http) = {
            get: "/chain/getchaininfo"
        };
    }

    /** 
        Method: GetRawBlock 
        Input: message BlockHash
        Response: message GetBlockRawResponse
        Description: Returns the raw block from a block hash.
    */

    rpc GetRawBlock(Hash) returns (Block) {
        option (google.api.http) = {
            post: "/chain/getrawblock"
            body: "*"
        };
    }

    /** 
        Method: GetBlock 
        Input: message BlockHash
        Response: message GetBlockResponse
        Description: Returns the human readable block information from a block hash.
    */

    rpc GetBlock(Hash) returns (Block) {
        option (google.api.http) = {
            post: "/chain/getblock"
            body: "*"
        };
    }

    /** 
        Method: GetBlockHash 
        Input: message Number
        Response: message GetBlockHashResponse
        Description: Returns the hash string of the block at specified height
    */

    rpc GetBlockHash(Number) returns (Hash) {
        option (google.api.http) = {
            post: "/chain/getblockhash"
            body: "*"
        };
    }

     /** 
        Method: GetAccountInfo 
        Input: message Account
        Response: message AccountInfo
        Description: Returns the current account information
    */

    rpc GetAccountInfo(Account) returns (AccountInfo) {
        option (google.api.http) = {
            post: "/chain/getaccountinfo"
            body: "*"
        };
    }

    /** 
        Method: GetTransaction 
        Input: message Account
        Response: message AccountInfo
        Description: Returns the current account information
    */

    rpc GetTransaction(Hash) returns (Tx) {
        option (google.api.http) = {
            post: "/chain/gettransaction"
            body: "*"
        };
    }

    /** 
        Method: Sync 
        Input: message Hash
        Response: message RawData
        Description: Returns a stream of raw blocks from the block hash specified
    */

    rpc Sync(Hash) returns (stream RawData) {
        option (google.api.http) = {
            post: "/chain/sync"
            body: "*"
        };
    }

    /** 
        Method: Subscribe 
        Input: message SubscribeOptions
        Response: message BlockWithEpoch
        Description: Returns a stream to notify when new blocks arrive
    */

    rpc SubscribeBlocks(Empty) returns (stream SubscribeResponse) {
        option (google.api.http) = {
            get: "/chain/subscribeblocks"
        };
    }

     /** 
        Method: SubscribeTransactions 
        Input: message SubscribeAccountRequest
        Response: message SubscribeResponse
        Description: Return a stream when an account is found on a transaction
    */

    rpc SubscribeTransactions(SubscribeAccountRequest) returns (stream SubscribeResponse) {
        option (google.api.http) = {
            post: "/chain/subscribetransactions"
            body: "*"
        };
    }

    /** 
        Method: SubscribeValidatorTransactions 
        Input: message SubscribeValidatorRequest
        Response: message SubscribeResponse
        Description: Return a stream when validator pubkey is modified on the ValidatorRegistry
    */

    rpc SubscribeValidatorTransactions(SubscribeValidatorRequest) returns (stream SubscribeResponse) {
        option (google.api.http) = {
            post: "/chain/subscribevalidatortransactions"
            body: "*"
        };
    }
}

message SubscribeResponse {
    bytes data = 1;
}

message SubscribeAccountRequest {
    repeated bytes public_key_hash = 1;
}

message SubscribeValidatorRequest {
    repeated bytes public_key = 1;
}

message ChainInfo {
    string block_hash = 1;
    uint64 block_height = 2;
    uint64 validators = 3;
}

message AccountInfo {
    string account = 1;
    uint64 balance = 2;
    uint64 nonce = 3;
    repeated string txs = 4;
}





// Code generated by MockGen. DO NOT EDIT.
// Source: internal/txindex/txindex.go

// Package txindex is a generated GoMock package.
package txindex

import (
	gomock "github.com/golang/mock/gomock"
	chainhash "github.com/olympus-protocol/ogen/pkg/chainhash"
	reflect "reflect"
)

// MockTxIndex is a mock of TxIndex interface
type MockTxIndex struct {
	ctrl     *gomock.Controller
	recorder *MockTxIndexMockRecorder
}

// MockTxIndexMockRecorder is the mock recorder for MockTxIndex
type MockTxIndexMockRecorder struct {
	mock *MockTxIndex
}

// NewMockTxIndex creates a new mock instance
func NewMockTxIndex(ctrl *gomock.Controller) *MockTxIndex {
	mock := &MockTxIndex{ctrl: ctrl}
	mock.recorder = &MockTxIndexMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTxIndex) EXPECT() *MockTxIndexMockRecorder {
	return m.recorder
}

// GetAccountTxs mocks base method
func (m *MockTxIndex) GetAccountTxs(account [20]byte) (AccountTxs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountTxs", account)
	ret0, _ := ret[0].(AccountTxs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountTxs indicates an expected call of GetAccountTxs
func (mr *MockTxIndexMockRecorder) GetAccountTxs(account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountTxs", reflect.TypeOf((*MockTxIndex)(nil).GetAccountTxs), account)
}

// GetTx mocks base method
func (m *MockTxIndex) GetTx(hash chainhash.Hash) (TxLocator, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTx", hash)
	ret0, _ := ret[0].(TxLocator)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTx indicates an expected call of GetTx
func (mr *MockTxIndexMockRecorder) GetTx(hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTx", reflect.TypeOf((*MockTxIndex)(nil).GetTx), hash)
}

// SetTx mocks base method
func (m *MockTxIndex) SetTx(locator TxLocator, account [20]byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTx", locator, account)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetTx indicates an expected call of SetTx
func (mr *MockTxIndexMockRecorder) SetTx(locator, account interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTx", reflect.TypeOf((*MockTxIndex)(nil).SetTx), locator, account)
}

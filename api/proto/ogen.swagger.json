{
  "swagger": "2.0",
  "info": {
    "title": "Ogen API",
    "version": "1.0",
    "contact": {
      "name": "Enrique Berrueta",
      "email": "eabz@polispay.org"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/chain/account/{account}": {
      "get": {
        "operationId": "Chain_GetAccountInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AccountInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Chain"
        ]
      }
    },
    "/chain/block/{hash}": {
      "get": {
        "operationId": "Chain_GetBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Chain"
        ]
      }
    },
    "/chain/blockhash/{number}": {
      "get": {
        "operationId": "Chain_GetBlockHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Hash"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Chain"
        ]
      }
    },
    "/chain/chaininfo": {
      "get": {
        "operationId": "Chain_GetChainInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ChainInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Chain"
        ]
      }
    },
    "/chain/rawblock/{hash}": {
      "get": {
        "operationId": "Chain_GetRawBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Chain"
        ]
      }
    },
    "/chain/subscribe/blocks": {
      "get": {
        "operationId": "Chain_SubscribeBlocks",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/RawData"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of RawData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Chain"
        ]
      }
    },
    "/chain/sync/{hash}": {
      "get": {
        "operationId": "Chain_Sync",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/RawData"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of RawData"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Chain"
        ]
      }
    },
    "/consensus/getepochinfo/{number}": {
      "get": {
        "operationId": "Consensus_GetEpochInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EpochInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Consensus"
        ]
      }
    },
    "/consensus/getslotinfo/{number}": {
      "get": {
        "operationId": "Consensus_GetSlotInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/SlotInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Consensus"
        ]
      }
    },
    "/consensus/participation": {
      "get": {
        "operationId": "Consensus_GetParticipationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ParticipationStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Consensus"
        ]
      }
    },
    "/indexer/account/{account}": {
      "get": {
        "operationId": "Indexer_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/AccountDetail"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Indexer"
        ]
      }
    },
    "/indexer/block/{hash}": {
      "get": {
        "operationId": "Indexer_GetBlockTxs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/BlockTxs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Indexer"
        ]
      }
    },
    "/indexer/blockhash/{number}": {
      "get": {
        "operationId": "Indexer_GetBlockHash",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Hash"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Indexer"
        ]
      }
    },
    "/indexer/status": {
      "get": {
        "operationId": "Indexer_GetIndexerStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/IndexerStatus"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Indexer"
        ]
      }
    },
    "/indexer/tx-detail/{hash}": {
      "get": {
        "operationId": "Indexer_GetDetailedTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/TxDetail"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Indexer"
        ]
      }
    },
    "/indexer/tx/{hash}": {
      "get": {
        "operationId": "Indexer_GetTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Tx"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Indexer"
        ]
      }
    },
    "/network/addpeer/{host}": {
      "get": {
        "operationId": "Network_AddPeer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "host",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Network"
        ]
      }
    },
    "/network/networkinfo": {
      "get": {
        "operationId": "Network_GetNetworkInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/NetworkInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Network"
        ]
      }
    },
    "/network/peers": {
      "get": {
        "operationId": "Network_GetPeersInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Peers"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Network"
        ]
      }
    },
    "/utils/decoderawblock": {
      "post": {
        "summary": "* \nMethod: DecodeRawBlock \nInput: message RawData\nResponse: message Block\nDescription: Returns a raw block on human readable format.",
        "operationId": "Utils_DecodeRawBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RawData"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/decoderawtransaction": {
      "post": {
        "summary": "* \nMethod: DecodeRawTransaction \nInput: message RawData\nResponse: message Tx\nDescription: Returns a raw transaction on human readable format.",
        "operationId": "Utils_DecodeRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Tx"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RawData"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/genkeypair": {
      "get": {
        "summary": "*\nMethod: GenKeyPair\nInput: message Empty\nResponse: message KeyPair\nDescription: Generates a new bls bech32 encoded key pair.",
        "operationId": "Utils_GenKeyPair",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/KeyPair"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/genvalidatorkey": {
      "post": {
        "summary": "* \nMethod: GenValidatorKey \nInput: message GenValidatorKeys\nResponse: message KeyPairs\nDescription: Returns private keys generated for validators start.",
        "operationId": "Utils_GenValidatorKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/KeyPairs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenValidatorKeys"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/getparticipationinfo": {
      "get": {
        "summary": "*\nMethod: GetParticipationStatus\nInput: Empty\nResponse: ParticipationInfo\nDescription: Returns current internal status of consensus participation.",
        "operationId": "Utils_GetParticipationStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ParticipationInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/submitrawdata": {
      "post": {
        "summary": "* \nMethod: SubmitRawData \nInput: message RawData\nResponse: message Success\nDescription: Broadcast a raw elements of different transactions.",
        "operationId": "Utils_SubmitRawData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RawData"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/submitredeemproof": {
      "post": {
        "summary": "*\nMethod: SubmitRedeemProof\nInput: RedeemProof\nResponse: Tx\nDescription: Returns a stream of transactions. Relaying a transaction when arrives the mempool.",
        "operationId": "Utils_SubmitRedeemProof",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RedeemProof"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/validators/account/{account}": {
      "get": {
        "operationId": "Validators_GetAccountValidators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ValidatorsRegistry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "account",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Validators"
        ]
      }
    },
    "/validators/list": {
      "get": {
        "operationId": "Validators_GetValidatorsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ValidatorsRegistry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Validators"
        ]
      }
    },
    "/wallet/account": {
      "get": {
        "operationId": "Wallet_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/KeyPair"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/balance": {
      "get": {
        "operationId": "Wallet_GetBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Balance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/close": {
      "get": {
        "operationId": "Wallet_CloseWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/create": {
      "post": {
        "operationId": "Wallet_CreateWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/NewWalletInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WalletReference"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/dumpwallet": {
      "get": {
        "operationId": "Wallet_DumpWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DumpWalletInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/exitvalidator/{public}": {
      "get": {
        "operationId": "Wallet_ExitValidator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "public",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "private",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/exitvalidatorbulk": {
      "post": {
        "operationId": "Wallet_ExitValidatorBulk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyPairs"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/import": {
      "post": {
        "operationId": "Wallet_ImportWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/KeyPair"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImportWalletData"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/list": {
      "get": {
        "operationId": "Wallet_ListWallets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Wallets"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/open": {
      "post": {
        "operationId": "Wallet_OpenWallet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WalletReference"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/sendtransaction": {
      "post": {
        "operationId": "Wallet_SendTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Hash"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendTransactionInfo"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/startvalidator/{private}": {
      "get": {
        "operationId": "Wallet_StartValidator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "private",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "public",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/startvalidatorbulk": {
      "post": {
        "operationId": "Wallet_StartValidatorBulk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KeyPairs"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/validators": {
      "get": {
        "operationId": "Wallet_GetValidators",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ValidatorsRegistry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/validatorscount": {
      "get": {
        "operationId": "Wallet_GetValidatorsCount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ValidatorsInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      }
    }
  },
  "definitions": {
    "AccountDetail": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "balance": {
          "$ref": "#/definitions/Balance"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "totalReceived": {
          "type": "string"
        },
        "totalSent": {
          "type": "string"
        },
        "txs": {
          "type": "string",
          "format": "uint64"
        },
        "txList": {
          "$ref": "#/definitions/HashList"
        }
      }
    },
    "AccountInfo": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "balance": {
          "$ref": "#/definitions/Balance"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "Balance": {
      "type": "object",
      "properties": {
        "confirmed": {
          "type": "string"
        },
        "unconfirmed": {
          "type": "string"
        },
        "locked": {
          "type": "string"
        },
        "total": {
          "type": "string"
        }
      }
    },
    "Block": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "rawBlock": {
          "type": "string"
        },
        "header": {
          "$ref": "#/definitions/BlockHeader"
        },
        "txs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "signature": {
          "type": "string"
        },
        "randaoSignature": {
          "type": "string"
        }
      }
    },
    "BlockHeader": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "uint64"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "prevBlockHash": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "slot": {
          "type": "string",
          "format": "uint64"
        },
        "feeAddress": {
          "type": "string"
        },
        "votesMerkleRoot": {
          "type": "string"
        },
        "depositsMerkleRoot": {
          "type": "string"
        },
        "exitsMerkleRoot": {
          "type": "string"
        },
        "partialExitsMerkleRoot": {
          "type": "string"
        },
        "coinProofsMerkleRoot": {
          "type": "string"
        },
        "executionsMerkleRoot": {
          "type": "string"
        },
        "txsMerkleRoot": {
          "type": "string"
        },
        "voteSlashingsMerkleRoot": {
          "type": "string"
        },
        "randaoSlashingsMerkleRoot": {
          "type": "string"
        },
        "proposerSlashingsMerkleRoot": {
          "type": "string"
        },
        "governanceVotesMerkleRoot": {
          "type": "string"
        },
        "multiSignatureTxsMerkleRoot": {
          "type": "string"
        }
      }
    },
    "BlockTxs": {
      "type": "object",
      "properties": {
        "txCount": {
          "type": "string",
          "format": "uint64"
        },
        "txs": {
          "$ref": "#/definitions/HashList"
        }
      }
    },
    "ChainInfo": {
      "type": "object",
      "properties": {
        "blockHash": {
          "type": "string"
        },
        "blockHeight": {
          "type": "string",
          "format": "uint64"
        },
        "validators": {
          "$ref": "#/definitions/ValidatorsInfo"
        },
        "justifiedHead": {
          "$ref": "#/definitions/Head"
        },
        "finalizedHead": {
          "$ref": "#/definitions/Head"
        },
        "synced": {
          "type": "boolean"
        }
      }
    },
    "ComitteeInformation": {
      "type": "object",
      "properties": {
        "index": {
          "type": "string",
          "format": "uint64"
        },
        "proposer": {
          "type": "boolean"
        },
        "voted": {
          "type": "boolean"
        }
      }
    },
    "DumpWalletInfo": {
      "type": "object",
      "properties": {
        "mnemonic": {
          "type": "string"
        }
      }
    },
    "EpochInfo": {
      "type": "object",
      "properties": {
        "epochNumber": {
          "type": "string",
          "format": "uint64"
        },
        "passed": {
          "type": "boolean"
        },
        "slots": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlotInfo"
          }
        }
      }
    },
    "GenValidatorKeys": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "Hash": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        }
      }
    },
    "HashList": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Head": {
      "type": "object",
      "properties": {
        "height": {
          "type": "string",
          "format": "uint64"
        },
        "slot": {
          "type": "string",
          "format": "uint64"
        },
        "hash": {
          "type": "string"
        }
      }
    },
    "IP": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        }
      }
    },
    "ImportWalletData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "mnemonic": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "IndexerStatus": {
      "type": "object",
      "properties": {
        "tip": {
          "$ref": "#/definitions/Head"
        },
        "justified": {
          "$ref": "#/definitions/Head"
        },
        "finalized": {
          "$ref": "#/definitions/Head"
        },
        "initialSync": {
          "type": "boolean"
        },
        "inSync": {
          "type": "boolean"
        },
        "about": {
          "type": "string"
        }
      }
    },
    "KeyPair": {
      "type": "object",
      "properties": {
        "public": {
          "type": "string"
        },
        "private": {
          "type": "string"
        }
      }
    },
    "KeyPairs": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NetworkInfo": {
      "type": "object",
      "properties": {
        "peers": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "string"
        }
      }
    },
    "NewWalletInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "account": {
          "type": "string"
        },
        "mnemonic": {
          "type": "string"
        }
      }
    },
    "ParticipationInfo": {
      "type": "object",
      "properties": {
        "voting": {
          "type": "boolean"
        },
        "proposing": {
          "type": "boolean"
        },
        "totalValidators": {
          "type": "string",
          "format": "uint64"
        },
        "ownedValidators": {
          "type": "string",
          "format": "uint64"
        },
        "votingValidators": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "ParticipationStatus": {
      "type": "object",
      "properties": {
        "globalSlotNumber": {
          "type": "string",
          "format": "uint64"
        },
        "epochSlotNumber": {
          "type": "string",
          "format": "uint64"
        },
        "expectedParticipationBalance": {
          "type": "string",
          "format": "uint64"
        },
        "currentParticipationBalance": {
          "type": "string",
          "format": "uint64"
        },
        "participationPercentage": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "Peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "host": {
          "$ref": "#/definitions/IP"
        }
      }
    },
    "Peers": {
      "type": "object",
      "properties": {
        "peers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Peer"
          }
        }
      }
    },
    "RawData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "RedeemProof": {
      "type": "object",
      "properties": {
        "proof": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "SendTransactionInfo": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      }
    },
    "SlotInfo": {
      "type": "object",
      "properties": {
        "slotNumber": {
          "type": "string",
          "format": "uint64"
        },
        "passed": {
          "type": "boolean"
        },
        "requiredComitters": {
          "type": "string",
          "format": "uint64"
        },
        "comitteesIndexes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComitteeInformation"
          }
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "Tx": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "fromPublicKey": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "fee": {
          "type": "string",
          "format": "uint64"
        },
        "signature": {
          "type": "string"
        }
      }
    },
    "TxDetail": {
      "type": "object",
      "properties": {
        "tx": {
          "$ref": "#/definitions/Tx"
        },
        "blockHash": {
          "type": "string"
        },
        "blockHeight": {
          "type": "string"
        },
        "confirmations": {
          "type": "string",
          "format": "int64"
        },
        "finalized": {
          "type": "boolean"
        },
        "blockTime": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "ValidatorRegistry": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "payeeAddress": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "firstActiveEpoch": {
          "type": "string",
          "format": "uint64"
        },
        "lastActiveEpoch": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "ValidatorsInfo": {
      "type": "object",
      "properties": {
        "active": {
          "type": "string",
          "format": "int64"
        },
        "pendingExit": {
          "type": "string",
          "format": "int64"
        },
        "penaltyExit": {
          "type": "string",
          "format": "int64"
        },
        "exited": {
          "type": "string",
          "format": "int64"
        },
        "starting": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "ValidatorsRegistry": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/ValidatorsInfo"
        },
        "validators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidatorRegistry"
          }
        }
      }
    },
    "WalletReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Wallets": {
      "type": "object",
      "properties": {
        "wallets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

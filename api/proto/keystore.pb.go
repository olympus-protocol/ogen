// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: keystore.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type KeystoreKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*KeystoreKey `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *KeystoreKeys) Reset() {
	*x = KeystoreKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeystoreKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeystoreKeys) ProtoMessage() {}

func (x *KeystoreKeys) ProtoReflect() protoreflect.Message {
	mi := &file_keystore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeystoreKeys.ProtoReflect.Descriptor instead.
func (*KeystoreKeys) Descriptor() ([]byte, []int) {
	return file_keystore_proto_rawDescGZIP(), []int{0}
}

func (x *KeystoreKeys) GetKeys() []*KeystoreKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

type KeystoreKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Enabled bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Path    int64  `protobuf:"varint,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *KeystoreKey) Reset() {
	*x = KeystoreKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeystoreKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeystoreKey) ProtoMessage() {}

func (x *KeystoreKey) ProtoReflect() protoreflect.Message {
	mi := &file_keystore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeystoreKey.ProtoReflect.Descriptor instead.
func (*KeystoreKey) Descriptor() ([]byte, []int) {
	return file_keystore_proto_rawDescGZIP(), []int{1}
}

func (x *KeystoreKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeystoreKey) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *KeystoreKey) GetPath() int64 {
	if x != nil {
		return x.Path
	}
	return 0
}

type ToggleKeyMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Enabled   bool   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *ToggleKeyMsg) Reset() {
	*x = ToggleKeyMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleKeyMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleKeyMsg) ProtoMessage() {}

func (x *ToggleKeyMsg) ProtoReflect() protoreflect.Message {
	mi := &file_keystore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleKeyMsg.ProtoReflect.Descriptor instead.
func (*ToggleKeyMsg) Descriptor() ([]byte, []int) {
	return file_keystore_proto_rawDescGZIP(), []int{2}
}

func (x *ToggleKeyMsg) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *ToggleKeyMsg) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_keystore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_keystore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_keystore_proto_rawDescGZIP(), []int{3}
}

func (x *PublicKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_keystore_proto protoreflect.FileDescriptor

var file_keystore_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x0c,
	0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x20, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x65, 0x79,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x4d,
	0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x47, 0x0a,
	0x0c, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x1d, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x32, 0xde, 0x02, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x07, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x4b, 0x65,
	0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x22, 0x16, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x6b, 0x65, 0x79, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x3c, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x06, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x09, 0x2e, 0x4d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x42, 0x0a, 0x06, 0x47,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x0a, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x1a, 0x0c, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x2f, 0x7b, 0x6b, 0x65, 0x79, 0x7d, 0x12,
	0x3b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x6b, 0x65, 0x79, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x48, 0x0a, 0x09,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x0d, 0x2e, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x4b, 0x65, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x0c, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13,
	0x2f, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x6b, 0x65, 0x79, 0x3a, 0x01, 0x2a, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_keystore_proto_rawDescOnce sync.Once
	file_keystore_proto_rawDescData = file_keystore_proto_rawDesc
)

func file_keystore_proto_rawDescGZIP() []byte {
	file_keystore_proto_rawDescOnce.Do(func() {
		file_keystore_proto_rawDescData = protoimpl.X.CompressGZIP(file_keystore_proto_rawDescData)
	})
	return file_keystore_proto_rawDescData
}

var file_keystore_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_keystore_proto_goTypes = []interface{}{
	(*KeystoreKeys)(nil), // 0: KeystoreKeys
	(*KeystoreKey)(nil),  // 1: KeystoreKey
	(*ToggleKeyMsg)(nil), // 2: ToggleKeyMsg
	(*PublicKey)(nil),    // 3: PublicKey
	(*Number)(nil),       // 4: Number
	(*Empty)(nil),        // 5: Empty
	(*Mnemonic)(nil),     // 6: Mnemonic
}
var file_keystore_proto_depIdxs = []int32{
	1, // 0: KeystoreKeys.keys:type_name -> KeystoreKey
	4, // 1: Keystore.GenerateKeys:input_type -> Number
	5, // 2: Keystore.GetMnemonic:input_type -> Empty
	3, // 3: Keystore.GetKey:input_type -> PublicKey
	5, // 4: Keystore.GetKeys:input_type -> Empty
	2, // 5: Keystore.ToggleKey:input_type -> ToggleKeyMsg
	0, // 6: Keystore.GenerateKeys:output_type -> KeystoreKeys
	6, // 7: Keystore.GetMnemonic:output_type -> Mnemonic
	1, // 8: Keystore.GetKey:output_type -> KeystoreKey
	0, // 9: Keystore.GetKeys:output_type -> KeystoreKeys
	1, // 10: Keystore.ToggleKey:output_type -> KeystoreKey
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_keystore_proto_init() }
func file_keystore_proto_init() {
	if File_keystore_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_keystore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeystoreKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeystoreKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleKeyMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_keystore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_keystore_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_keystore_proto_goTypes,
		DependencyIndexes: file_keystore_proto_depIdxs,
		MessageInfos:      file_keystore_proto_msgTypes,
	}.Build()
	File_keystore_proto = out.File
	file_keystore_proto_rawDesc = nil
	file_keystore_proto_goTypes = nil
	file_keystore_proto_depIdxs = nil
}

{
  "swagger": "2.0",
  "info": {
    "title": "utils.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/utils/decoderawblock": {
      "post": {
        "summary": "* \nMethod: DecodeRawBlock \nInput: message RawData\nResponse: message Block\nDescription: Returns a raw block on human readable format.",
        "operationId": "Utils_DecodeRawBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Block"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RawData"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/decoderawtransaction": {
      "post": {
        "summary": "* \nMethod: DecodeRawTransaction \nInput: message RawData\nResponse: message Tx\nDescription: Returns a raw transaction on human readable format.",
        "operationId": "Utils_DecodeRawTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Tx"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RawData"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/genvalidatorkey": {
      "post": {
        "summary": "* \nMethod: GenValidatorKey \nInput: message GenValidatorKeys\nResponse: message KeyPairs\nDescription: Returns private keys generated for validators start.",
        "operationId": "Utils_GenValidatorKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/KeyPairs"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenValidatorKeys"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/startproposer": {
      "post": {
        "summary": "* \nMethod: StartProposer \nInput: message Empty\nResponse: message Success\nDescription: Loads the Keystore into the Proposer..",
        "operationId": "Utils_StartProposer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/stopproposer": {
      "get": {
        "summary": "* \nMethod: StopProposer \nInput: message Password\nResponse: message Success\nDescription: Removes Keystore information and stops the block proposer.",
        "operationId": "Utils_StopProposer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "Utils"
        ]
      }
    },
    "/utils/submitrawdata": {
      "post": {
        "summary": "* \nMethod: SubmitRawData \nInput: message RawData\nResponse: message Success\nDescription: Broadcast a raw elements of different transactions.",
        "operationId": "Utils_SubmitRawData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RawData"
            }
          }
        ],
        "tags": [
          "Utils"
        ]
      }
    }
  },
  "definitions": {
    "Block": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "raw_block": {
          "type": "string"
        },
        "header": {
          "$ref": "#/definitions/BlockHeader"
        },
        "txs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "signature": {
          "type": "string"
        },
        "randao_signature": {
          "type": "string"
        }
      }
    },
    "BlockHeader": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "format": "uint64"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "tx_merkle_root": {
          "type": "string"
        },
        "vote_merkle_root": {
          "type": "string"
        },
        "deposit_merkle_root": {
          "type": "string"
        },
        "exit_merkle_root": {
          "type": "string"
        },
        "vote_slashing_merkle_root": {
          "type": "string"
        },
        "randao_slashing_merkle_root": {
          "type": "string"
        },
        "proposer_slashing_merkle_root": {
          "type": "string"
        },
        "prev_block_hash": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "uint64"
        },
        "slot": {
          "type": "string",
          "format": "uint64"
        },
        "state_root": {
          "type": "string"
        },
        "fee_address": {
          "type": "string"
        }
      }
    },
    "Empty": {
      "type": "object"
    },
    "GenValidatorKeys": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "KeyPairs": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RawData": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "format": "boolean"
        },
        "error": {
          "type": "string"
        },
        "data": {
          "type": "string"
        }
      }
    },
    "Tx": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "from_public_key": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "uint64"
        },
        "nonce": {
          "type": "string",
          "format": "uint64"
        },
        "fee": {
          "type": "string",
          "format": "uint64"
        },
        "signature": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

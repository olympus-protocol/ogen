
syntax = "proto3";
option go_package = ".;proto";

import "google/api/annotations.proto";
import "common.proto";

service Utils {

    /**
        Method: GenKeyPair
        Input: message Empty
        Response: message KeyPair
        Description: Generates a new bls bech32 encoded key pair.
    */
    rpc GenKeyPair(Empty) returns (KeyPair) {
        option (google.api.http) = {
            get: "/utils/genkeypair"
        };
    }

    /** 
        Method: SubmitRawData 
        Input: message RawData
        Response: message Success
        Description: Broadcast a raw elements of different transactions.
    */
    rpc SubmitRawData(RawData) returns (Success) {
        option (google.api.http) = {
            post: "/utils/submitrawdata"
            body: "*"
        };
    }
   
    /** 
        Method: DecodeRawTransaction 
        Input: message RawData
        Response: message Tx
        Description: Returns a raw transaction on human readable format.
    */
    rpc DecodeRawTransaction(RawData) returns (Tx) {
        option (google.api.http) = {
            post: "/utils/decoderawtransaction"
            body: "*"
        };
    }

    /** 
        Method: DecodeRawBlock 
        Input: message RawData
        Response: message Block
        Description: Returns a raw block on human readable format.
    */
    rpc DecodeRawBlock(RawData) returns (Block) {
        option (google.api.http) = {
            post: "/utils/decoderawblock"
            body: "*"
        };
    }

    /**
    Method: SubmitRedeemProof
    Input: RedeemProof
    Response: Tx
    Description: Returns a stream of transactions. Relaying a transaction when arrives the mempool.
*/
    rpc SubmitRedeemProof(RedeemProof) returns (Success) {
        option (google.api.http) = {
            post: "/utils/submitredeemproof"
            body: "*"
        };
    }
}


message ParticipationInfo {
    bool voting = 1;
    bool proposing = 2;
    uint64 total_validators = 3;
    uint64 owned_validators = 4;
    uint64 voting_validators = 5;
}

message RedeemProof {
    string proof = 1;
    string address = 2;
}

syntax = "proto3";
option go_package = ".;proto";

import "google/api/annotations.proto";
import "common.proto";

service Keystore {
    /**
      Method: GenerateKeys
      Input: message GenValidatorKeys
      Response: message KeyPairs
      Description: Returns private keys generated for validators start.
    */
    rpc GenerateKeys(Number) returns (KeystoreKeys) {
      option (google.api.http) = {
        post: "/keystore/generatekeys"
        body: "*"
      };
    }

    /**
      Method: GetMnemonic
      Input: message Empty
      Response: message Mnemonic
      Description: Returns the mnemonic key of the keystore.
    */
    rpc GetMnemonic(Empty) returns (Mnemonic) {
      option (google.api.http) = {
        get: "/keystore/mnemonic"
      };
    }

    /**
      Method: GetKey
      Input: message PublicKey
      Response: message KeystoreKey
      Description: Returns the keystore information for a specific key.
    */
    rpc GetKey(PublicKey) returns (KeystoreKey) {
      option (google.api.http) = {
        get: "/keystore/getkey/{key}"
      };
    }

    /**
      Method: GetKeys
      Input: message Empty
      Response: message KeystoreKeys
      Description: Returns all the keystore keys.
    */
    rpc GetKeys(Empty) returns (KeystoreKeys) {
      option (google.api.http) = {
        get: "/keystore/getkeys"
      };
    }

    /**
      Method: ToggleKey
      Input: message ToggleKey
      Response: message KeystoreKey
      Description: Enables/Disable a keystore key.
    */
    rpc ToggleKey(ToggleKeyMsg) returns (KeystoreKey) {
      option (google.api.http) = {
        post: "/keystore/togglekey"
        body: "*"
      };
    }

}

message KeystoreKeys{
  repeated KeystoreKey keys = 1;
}

message KeystoreKey {
  string key = 1;
  bool enabled = 2;
  int64 path = 3;
}

message ToggleKeyMsg {
  string public_key = 1;
  bool enabled = 2;
}

message PublicKey {
  string key = 1;
}
